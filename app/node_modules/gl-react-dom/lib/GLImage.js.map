{"version":3,"sources":["../src/GLImage.js"],"names":["createTexture","require","loadImage","src","success","failure","img","window","Image","slice","crossOrigin","onload","onabort","onerror","GLImage","gl","image","_onload","texture","minFilter","magFilter","LINEAR","_textureImg","prototype","dispose","_loading","reloadImage","_src","clearImage","getTexture","shape","width","height","setPixels","Object","defineProperty","set","get","module","exports"],"mappings":"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","file":"GLImage.js","sourcesContent":["const createTexture = require(\"gl-texture2d\");\n\nfunction loadImage (src, success, failure) {\n  var img = new window.Image();\n  if (src.slice(0,5) !== \"data:\") {\n    img.crossOrigin = true;\n  }\n  img.onload = function () {\n    success(img);\n  };\n  img.onabort = img.onerror = failure;\n  img.src = src;\n  return function () {\n    img.onload = null;\n    img.onerror = null;\n    img.onabort = null;\n    img.src = \"\";\n    img = null;\n  };\n}\n\nfunction GLImage (gl, onload) {\n  this.gl = gl;\n  this.image = null;\n  this._onload = onload;\n\n  this.texture = createTexture(gl, [ 2, 2 ]);\n  this.texture.minFilter = this.texture.magFilter = gl.LINEAR;\n  this._textureImg = null;\n}\nGLImage.prototype = {\n  dispose: function () {\n    if (this._loading) this._loading();\n    this.texture.dispose();\n    this.texture = null;\n  },\n  reloadImage: function () {\n    const src = this._src;\n    if (this._loading) this._loading();\n    this._loading = null;\n    if (!src) {\n      this.clearImage();\n    }\n    else {\n      this._loading = loadImage(src, img => {\n        this.clearImage();\n        this._loading = null;\n        this.image = img;\n        if (this._onload) this._onload(src);\n      }, () => {\n        this._loading = null;\n        this.clearImage();\n      });\n    }\n  },\n  getTexture: function () {\n    const image = this.image;\n    const texture = this.texture;\n    if (image !== this._textureImg) {\n      this._textureImg = image;\n      if (image) {\n        texture.shape = [ image.width, image.height ];\n        texture.setPixels(image);\n      }\n      else {\n        texture.shape = [ 2, 2 ];\n      }\n    }\n    return texture;\n  },\n  clearImage: function () {\n    this.image = null;\n  }\n};\nObject.defineProperty(GLImage.prototype, \"src\", {\n  set: function (src) {\n    if (src === this._src) return;\n    this._src = src;\n    this.reloadImage();\n  },\n  get: function () {\n    return this._src;\n  }\n});\n\nmodule.exports = GLImage;\n"]}