{"version":3,"sources":["../src/canvasPool.js"],"names":["Cache","require","pointerEventsProperty","getContext","maxSizePool","pool","setSize","size","splice","forEach","p","dispose","clear","create","parentNode","poolObject","length","canvas","document","createElement","style","width","height","opts","gl","removeChild","reachPoolLimit","console","warn","dontReuse","indexOf","push","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","COLOR_BUFFER_BIT","cache","_w","_h","_s","resize","w","h","scale","scaleChanged","appendChild","module","exports"],"mappings":"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","file":"canvasPool.js","sourcesContent":["const Cache = require(\"./GLCanvasCache\");\nconst pointerEventsProperty = require(\"./pointerEventsProperty\");\nconst getContext = require(\"./getContext\");\n\nlet maxSizePool = 20;\nconst pool = [];\n\nfunction setSize (size) {\n  maxSizePool = size;\n  pool.splice(size).forEach(p => p.dispose(true));\n}\n\nfunction clear () {\n  pool.splice(0).forEach(p => p.dispose(true));\n}\n\nfunction create (parentNode) {\n  let poolObject;\n\n  if (pool.length > 0) {\n    // reuse most recently used canvas\n    poolObject = pool.splice(pool.length-1)[0];\n  }\n  else {\n    // create a new canvas / context\n    const canvas = document.createElement(\"canvas\");\n    canvas.style[pointerEventsProperty] = \"none\";\n    canvas.style.width = \"100%\";\n    canvas.style.height = \"100%\";\n\n    const opts = {};\n    const gl = getContext(canvas, opts);\n\n    if (!gl) return null;\n\n    const dispose = dontReuse => {\n      if (canvas.parentNode) {\n        canvas.parentNode.removeChild(canvas);\n      }\n      const reachPoolLimit = pool.length >= maxSizePool;\n      if (reachPoolLimit) {\n        console.warn( // eslint-disable-line no-console\n          `gl-react-dom: canvasPool of size ${maxSizePool} reached, you might want to increase pool size, use less concurrent WebGL Canvases or consider using gl-react-dom-static-container library`);\n      }\n      if (!dontReuse && !reachPoolLimit && pool.indexOf(poolObject) === -1) {\n        pool.push(poolObject);\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.clearColor(0.0, 0.0, 0.0, 0.0);\n        gl.clear(gl.COLOR_BUFFER_BIT);\n      }\n      else {\n        poolObject.cache.dispose();\n      }\n    };\n\n    let _w = -1, _h = -1, _s = -1;\n    const resize = (w, h, scale) => {\n      const scaleChanged = scale !== _s;\n      if (scaleChanged) {\n        _s = scale;\n      }\n      if (w !== _w || scaleChanged) {\n        _w = w;\n        canvas.width = scale * w;\n      }\n      if (h !== _h || scaleChanged) {\n        _h = h;\n        canvas.height = scale * h;\n      }\n    };\n\n    poolObject = {\n      canvas,\n      gl,\n      dispose,\n      resize,\n      cache: new Cache(gl)\n    };\n  }\n\n  parentNode.appendChild(poolObject.canvas);\n\n  return poolObject;\n}\n\nmodule.exports = {\n  create,\n  clear,\n  setSize\n};\n"]}