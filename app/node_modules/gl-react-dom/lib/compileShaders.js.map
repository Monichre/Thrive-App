{"version":3,"sources":["../src/compileShaders.js"],"names":["require","Shaders","createShader","getContext","vertexCode","mockCanvas","document","createElement","mockGl","checkCompiles","Error","shader","o","frag","uniforms","types","dispose","setImplementation","add","id","Promise","resolve","then","e","rawError","message","remove"],"mappings":";;eACoBA,QAAQ,UAAR,C;;IAAZC,O,YAAAA,O;;AACR,IAAMC,eAAeF,QAAQ,WAAR,CAArB;AACA,IAAMG,aAAaH,QAAQ,cAAR,CAAnB;AACA,IAAMI,aAAaJ,QAAQ,eAAR,CAAnB;AACA,IAAMK,aAAaC,SAASC,aAAT,CAAuB,QAAvB,CAAnB;AACA,IAAMC,SAASL,WAAWE,UAAX,EAAuB,EAAvB,CAAf;;AAEA,IAAMI,gBAAgB,SAAhBA,aAAgB,IAAK;AACzB,MAAI,CAACD,MAAL,EAAa,MAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN,CADY,CACkC;AAC3D,MAAMC,SAAST,aAAaM,MAAb,EAAqBJ,UAArB,EAAiCQ,EAAEC,IAAnC,CAAf;AAFyB,MAGlBC,QAHkB,GAGNH,OAAOI,KAHD,CAGlBD,QAHkB;;AAIzBH,SAAOK,OAAP;AACA,SAAO,EAACF,kBAAD,EAAP;AACD,CAND;;AAQAb,QAAQgB,iBAAR,CAA0B;AACxBC,OAAK,aAACC,EAAD,EAAKR,MAAL;AAAA,WAAgBS,QAAQC,OAAR,GAAkBC,IAAlB,CAAuB,YAAM;AAChD,UAAI;AACF,eAAOb,cAAcE,MAAd,CAAP;AACD,OAFD,CAGA,OAAOY,CAAP,EAAU;AACR,cAAMA,EAAEC,QAAF,IAAcD,EAAEE,OAAtB;AACD;AACF,KAPoB,CAAhB;AAAA,GADmB;AASxBC,UAAQ,kBAAI,CAAE;AATU,CAA1B","file":"compileShaders.js","sourcesContent":["\nconst { Shaders } = require(\"gl-react\");\nconst createShader = require(\"gl-shader\");\nconst getContext = require(\"./getContext\");\nconst vertexCode = require(\"./static.vert\");\nconst mockCanvas = document.createElement(\"canvas\");\nconst mockGl = getContext(mockCanvas, {});\n\nconst checkCompiles = o => {\n  if (!mockGl) throw new Error(\"WebGL context unavailable\"); // we skip validation when webgl is not supported\n  const shader = createShader(mockGl, vertexCode, o.frag);\n  const {uniforms} = shader.types;\n  shader.dispose();\n  return {uniforms};\n};\n\nShaders.setImplementation({\n  add: (id, shader) => Promise.resolve().then(() => {\n    try {\n      return checkCompiles(shader);\n    }\n    catch (e) {\n      throw e.rawError || e.message;\n    }\n  }),\n  remove: ()=>{}\n});\n"]}