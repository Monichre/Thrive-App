{"version":3,"sources":["../src/Uniform.js"],"names":["Uniform","Backbuffer","backbufferFrom","node","type","Resolution","textureSize","obj","textureSizeRatio","ratio"],"mappings":";;;;;;;AAIA;;;AAGA,IAAMA,UAAU;AACd;;;AAGAC,cAAY,cAJE;;AAMd;;;;AAIAC,kBAAgB,wBAACC,IAAD;AAAA,WAAuB,EAAEC,MAAM,gBAAR,EAA0BD,UAA1B,EAAvB;AAAA,GAVF;;AAYd;;;AAGAE,cAAY,cAfE;AAgBd;;;;AAIAC,eAAa,qBAACC,GAAD;AAAA,WAAa,EAAEH,MAAM,aAAR,EAAuBG,QAAvB,EAAb;AAAA,GApBC;AAqBd;;;;AAIAC,oBAAkB,0BAACD,GAAD;AAAA,WAAa,EAAEH,MAAM,aAAR,EAAuBG,QAAvB,EAA4BE,OAAO,IAAnC,EAAb;AAAA;AAzBJ,CAAhB;;kBA4BeT,O","file":"Uniform.js","sourcesContent":["//@flow\nimport type Node from \"./Node\";\nimport type Bus from \"./Bus\";\n\n/**\n * A set of Uniform symbols you can pass to a uniform. (recognized and interpreted by Node)\n */\nconst Uniform = {\n  /**\n   * Inject the texture of the previous framebuffer state\n   */\n  Backbuffer: \"_Backbuffer_\",\n\n  /**\n   * Inject the texture of the previous framebuffer state of another Node pointed by its reference.\n   * @param  {Node | Bus} a Node or Bus instance of what you want the backbuffer from. the Node needs to have backbuffering enabled. (in case of Bus, it means its root Node)\n   */\n  backbufferFrom: (node: Node | Bus) => ({ type: \"BackbufferFrom\", node }),\n\n  /**\n   * the framebuffer size itself\n   */\n  Resolution: \"_Resolution_\",\n  /**\n   * Inject the size of a given Texture input\n   * @param {any} obj the texture input object\n   */\n  textureSize: (obj: *) => ({ type: \"TextureSize\", obj }),\n  /**\n   * Inject the width/height ratio of a given Texture input\n   * @param {any} obj the texture input object\n   */\n  textureSizeRatio: (obj: *) => ({ type: \"TextureSize\", obj, ratio: true })\n};\n\nexport default Uniform;\n"]}