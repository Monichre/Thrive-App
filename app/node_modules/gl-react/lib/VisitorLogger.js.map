{"version":3,"sources":["../src/VisitorLogger.js"],"names":["aggregateInfo","Array","isArray","info","reduce","acc","concat","String","dependency","getGLName","initialObj","textureOptions","VisitorLogger","groupNestedLvl","surface","gl","getGLSize","width","height","console","groupCollapsed","e","error","groupEnd","node","context","glSurface","_needsRedraw","group","additions","deletions","length","log","map","n","join","preparedUniforms","props","blendFunc","clear","w","h","JSON","stringify","forEach","key","obj","type","value","getMetaInfo","values","undefined","v","spaces","i"],"mappings":"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","file":"VisitorLogger.js","sourcesContent":["//@flow\n/* eslint-disable no-console */\nimport log from \"./helpers/log\";\nimport type { Surface } from \"./createSurface\";\nimport type Node from \"./Node\";\nimport type Bus from \"./Bus\";\nimport Visitor from \"./Visitor\";\n\nconst aggregateInfo = info =>\n  Array.isArray(info)\n    ? info.reduce((acc, info) => acc.concat(aggregateInfo(info)), [])\n    : [\n        String(\n          (info.dependency && info.dependency.getGLName()) || info.initialObj\n        )\n      ].concat(info.textureOptions ? [info.textureOptions] : []);\n\n/**\n *\n */\nexport default class VisitorLogger extends Visitor {\n  groupNestedLvl = 0;\n  onSurfaceGLContextChange(surface: Surface, gl: ?WebGLRenderingContext) {\n    if (gl) {\n      log(surface.getGLName() + \" _context acquired_\");\n    } else {\n      log(surface.getGLName() + \" _context lost_\");\n    }\n  }\n  onSurfaceDrawSkipped() {}\n  onSurfaceDrawStart(surface: Surface) {\n    const [width, height] = surface.getGLSize();\n    console.groupCollapsed(\"Surface draw\");\n    this.groupNestedLvl = 1;\n    log(\"_size_ `\" + width + \"`x`\" + height + \"`\");\n  }\n  onSurfaceDrawError(e: Error) {\n    console.error(e);\n    while (this.groupNestedLvl > 0) {\n      console.groupEnd();\n      this.groupNestedLvl--;\n    }\n    return true;\n  }\n  onSurfaceDrawEnd() {\n    this.groupNestedLvl--;\n    console.groupEnd();\n  }\n  onNodeDrawSkipped(node: Node) {\n    log(\n      node.getGLName() +\n        \" redraw _skipped_: \" +\n        (!node.context.glSurface.gl\n          ? \"no gl context available!\"\n          : !node._needsRedraw ? \"no need to redraw\" : \"\")\n    );\n  }\n  onNodeDrawStart(node: Node) {\n    this.groupNestedLvl++;\n    console.group(node.getGLName());\n  }\n  onNodeSyncDeps(\n    node: Node,\n    additions: Array<Bus | Node>,\n    deletions: Array<Bus | Node>\n  ) {\n    if (additions.length)\n      console.log(\n        node.getGLName() +\n          \" +deps \" +\n          additions.map(n => n.getGLName()).join(\", \")\n      );\n    if (deletions.length)\n      console.log(\n        node.getGLName() +\n          \" -deps \" +\n          additions.map(n => n.getGLName()).join(\", \")\n      );\n  }\n  onNodeDraw(node: Node, preparedUniforms: Array<*>) {\n    const { blendFunc, clear } = node.props;\n    this.groupNestedLvl++;\n    console.group(\"DRAW \" + node.getGLName());\n    const [w, h] = node.getGLSize();\n    log(\n      \"_size_ `\" +\n        w +\n        \"`x`\" +\n        h +\n        \"` \" +\n        \"_clear_ `\" +\n        JSON.stringify(clear) +\n        \"` \" +\n        \"_blendFunc_ `\" +\n        JSON.stringify(blendFunc) +\n        \"`\"\n    );\n    log(\"_\" + preparedUniforms.length + \" uniforms:_\");\n    preparedUniforms.forEach(obj => {\n      let { key, type, value, getMetaInfo } = obj;\n      type = String(type || \"UNKNOWN\");\n      const values =\n        value === undefined\n          ? \"\"\n          : Array.isArray(value)\n            ? \"[\" + value.map(v => \"`\" + String(v) + \"`\").join(\",\") + \"]\"\n            : \"`\" + String(value) + \"`\";\n      let spaces = \"\";\n      for (let i = type.length + key.length - 18; i < 0; i++) {\n        spaces += \" \";\n      }\n      log(\n        `${spaces}*${type === \"UNKNOWN\"\n          ? \"[c='color:red']UNKNOWN[c]\"\n          : type}* _${key}_ = ${values}`,\n        ...(getMetaInfo ? aggregateInfo(getMetaInfo()) : [])\n      );\n    });\n  }\n  onNodeDrawEnd() {\n    this.groupNestedLvl -= 2;\n    console.groupEnd();\n    console.groupEnd();\n  }\n}\n"]}