{"version":3,"sources":["../src/TextureLoaderNDArray.js"],"names":["TextureLoaderNDArray","gl","textures","WeakMap","obj","shape","data","stride","array","texture","get","createTexture","set","bindTexture","TEXTURE_2D","slice"],"mappings":";;;;;;;;AACA;;AACA;;;;AAEA;;;;;;;;;;;;IAEqBA,oB;;;AAEnB,gCAAYC,EAAZ,EAAuC;AAAA;;AAAA,4IAC/BA,EAD+B;;AAErC,UAAKC,QAAL,GAAgB,IAAIC,OAAJ,EAAhB;AAFqC;AAGtC;;;;4BACOC,G,EAAQ;AACd,aAAOA,IAAIC,KAAJ,IAAaD,IAAIE,IAAjB,IAAyBF,IAAIG,MAApC;AACD;;;8BACS;AACR,wCAAiB,KAAKL,QAAtB;AACD;;;wBACGM,K,EAAgB;AAAA,UACVP,EADU,GACH,IADG,CACVA,EADU;;AAElB,UAAIQ,UAAU,KAAKP,QAAL,CAAcQ,GAAd,CAAkBF,KAAlB,CAAd;AACA,UAAI,CAACC,OAAL,EAAc;AACZA,kBAAUR,GAAGU,aAAH,EAAV;AACA,aAAKT,QAAL,CAAcU,GAAd,CAAkBJ,KAAlB,EAAyBC,OAAzB;AACD;AACDR,SAAGY,WAAH,CAAeZ,GAAGa,UAAlB,EAA8BL,OAA9B;AACA,wCAAmBR,EAAnB,EAAuBQ,OAAvB,EAAgCD,KAAhC;AACA,aAAOC,OAAP;AACD;;;4BACOD,K,EAAgB;AACtB,aAAOA,MAAMH,KAAN,CAAYU,KAAZ,CAAkB,CAAlB,EAAqB,CAArB,CAAP;AACD;;;;;;kBAzBkBf,oB","file":"TextureLoaderNDArray.js","sourcesContent":["//@flow\nimport { disposeObjectMap } from \"./helpers/disposable\";\nimport TextureLoader from \"./TextureLoader\";\nimport type { NDArray } from \"ndarray\";\nimport drawNDArrayTexture from \"./helpers/drawNDArrayTexture\";\n\nexport default class TextureLoaderNDArray extends TextureLoader<NDArray> {\n  textures: WeakMap<NDArray, WebGLTexture>;\n  constructor(gl: WebGLRenderingContext) {\n    super(gl);\n    this.textures = new WeakMap();\n  }\n  canLoad(obj: *) {\n    return obj.shape && obj.data && obj.stride;\n  }\n  dispose() {\n    disposeObjectMap(this.textures);\n  }\n  get(array: NDArray) {\n    const { gl } = this;\n    let texture = this.textures.get(array);\n    if (!texture) {\n      texture = gl.createTexture();\n      this.textures.set(array, texture);\n    }\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    drawNDArrayTexture(gl, texture, array);\n    return texture;\n  }\n  getSize(array: NDArray) {\n    return array.shape.slice(0, 2);\n  }\n}\n"]}